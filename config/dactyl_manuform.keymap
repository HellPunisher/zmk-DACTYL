/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

&mt {
  // flavor = "balanced";
  // tapping-term-ms = <125>;
  // quick-tap-ms = <100>;
  // global-quick-tap;
};

&lt {
  // flavor = "balanced";
  // tapping-term-ms = <250>;
  // quick-tap-ms = <100>;
  // global-quick-tap;
};

/ {
  // behaviors {
  //   hm: homerow_mods {
  //     compatible = "zmk,behavior-hold-tap";
  //     label = "HOMEROW_MODS";
  //     #binding-cells = <2>;
  //     tapping-term-ms = <200>;
  //     quick-tap-ms = <0>;
  //     flavor = "tap-preferred";
  //     bindings =
  //       <&kp>,
  //       <&kp>;
  //   };
  // };

  combos {
    compatible = "zmk,combos";

    caps {
      bindings = <&kp CAPS>;
      key-positions = <12 13>;
      layers = <0>;
    };

    nubs {
      bindings = <&kp NUBS>;
      key-positions = <4 3>;
      layers = <0>;
    };

    nuhs {
      bindings = <&kp NON_US_HASH>;
      key-positions = <7 8>;
      layers = <0>;
    };

    nums_comma {
      bindings = <&kp COMMA>;
      key-positions = <16 15>;
      layers = <1>;
    };

    nums_dot {
      bindings = <&kp DOT>;
      key-positions = <19 20>;
      layers = <1>;
    };
  };

  behaviors {
    hml: hml {
      compatible = "zmk,behavior-hold-tap";
      label = "Left HomeRow Mods";
      bindings = <&kp>, <&kp>;

      #binding-cells = <2>;
      tapping-term-ms = <280>;
      quick-tap-ms = <175>;
      require-prior-idle-ms = <150>;
      flavor = "balanced";
      hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 38 37 36>;
      hold-trigger-on-release;
    };

    hmr: hmr {
      compatible = "zmk,behavior-hold-tap";
      label = "Right HomeRow Mods";
      bindings = <&kp>, <&kp>;

      #binding-cells = <2>;
      tapping-term-ms = <280>;
      quick-tap-ms = <175>;
      require-prior-idle-ms = <150>;
      flavor = "balanced";
      hold-trigger-on-release;
      hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
    };

    sqt_altgr: sqt_altgr {
      compatible = "zmk,behavior-mod-morph";
      label = "SQT_ALTGR";
      bindings = <&kp SQT>, <&kp RA(SQT)>;

      #binding-cells = <0>;
      mods = <(MOD_LALT)>;
    };

    u_altgr: u_altgr {
      compatible = "zmk,behavior-mod-morph";
      label = "U_ALTGR";
      bindings = <&kp U>, <&kp RA(U)>;

      #binding-cells = <0>;
      mods = <(MOD_LALT)>;
    };

    rbkt_altgr: rbkt_altgr {
      compatible = "zmk,behavior-mod-morph";
      label = "RBKT_ALTGR";
      bindings = <&kp RIGHT_BRACKET>, <&kp RA(RIGHT_BRACKET)>;

      #binding-cells = <0>;
      mods = <(MOD_LALT)>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      label = "Base layer";
      bindings = <
&kp ESCAPE     &kp Q            &kp W            &kp E            &kp R              &kp T          &kp Y        &u_altgr            &kp I         &kp O             &kp P                     &kp LEFT_BRACKET
&kp TAB        &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LCTRL D     &hml LEFT_SHIFT F  &kp G          &kp H        &hmr RIGHT_SHIFT J  &hmr RCTRL K  &hmr RIGHT_ALT L  &hmr RIGHT_GUI SEMICOLON  &sqt_altgr
&kp BACKSLASH  &kp Z            &kp X            &kp C            &kp V              &kp B          &kp N        &kp M               &kp COMMA     &kp DOT           &kp FSLH                  &rbkt_altgr
                               &kp LBKT  &kp RBKT                                                                                      &kp MINUS  &kp EQUAL
                                                   &kp BSPC  &mt LSHIFT ESC                           &mt RALT SPACE  &mt RSHFT ENTER
                                                             &mo ADJUST      &kp TAB   &mt LCTRL DEL  &mo RAISE
                                                             &mo 1           &kp LGUI  &kp END        &mo LOWER
            >;
        };

        lower_layer {
            bindings = <
&trans  &trans     &kp N7  &kp N8  &kp N9                  &kp C_VOL_UP  &trans    &kp UP     &trans     &kp PG_UP
&trans  &kp PSCRN  &kp N4  &kp N5  &kp N6                  &kp C_MUTE    &kp LEFT  &kp DOWN   &kp RIGHT  &kp PG_DN
&trans  &trans     &kp N1  &kp N2  &kp N3                  &kp C_VOL_DN  &kp FSLH  &kp BSLH   &kp QMARK  &kp PIPE
        &trans     &kp N0                                                          &mkp LCLK  &mkp RCLK
                           &trans  &trans                  &trans        &trans
                                   &trans  &trans  &trans  &trans
                                   &trans  &trans  &trans  &trans
            >;
        };

        nums {
      label = "Numbers and symbols";
      bindings = <
&kp GRAVE  &kp F2        &kp F3  &kp F4    &kp F5      &kp F6         &kp F7     &kp F8         &kp F9        &kp F10               &kp F11                &kp TILDE
&kp PLUS   &kp EXCL      &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER
&kp EQUAL  &kp NUMBER_1  &kp N2  &kp N3    &kp N4      &kp N5         &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &kp MINUS
                             &trans    &trans                     &trans     &trans
                                       &trans     &trans  &trans  &trans
                                       &trans     &trans  &trans  &trans
            >;
        };

         navi {
      label = "Navigation";
      bindings = <
&kp LCMD      &none   &none   &none   &none   &none     &kp HOME      &kp PG_DN        &kp PG_UP           &kp END              &none  &kp RIGHT_GUI
&kp LCTRL     &trans  &trans  &trans  &trans  &none     &kp LEFT      &kp DOWN         &kp UP              &kp RIGHT            &none  &kp RCTRL
&kp LEFT_ALT  &none   &none   &none   &none   &none     &kp RA(LEFT)  &kp PRINTSCREEN  &kp LG(LC(LS(N4)))  &kp RA(RIGHT_ARROW)  &none  &kp RALT
              &bt BT_CLR    &bt BT_CLR_ALL                                                            &none   &none
                                            &none         &none                       &none   &none
                                                          &none         &none  &none  &none
                                                          &none         &none  &none  &none
bt_media {
      label = "BT and Media";
      bindings = <
&out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &kp C_MUTE           &kp C_PREVIOUS    &none   &none   &none  &none  &out OUT_TOG
&bt BT_CLR    &none         &none         &none         &none         &kp C_VOLUME_UP      &kp C_PLAY_PAUSE  &none   &none   &none  &none  &none
&none         &none         &none         &none         &none         &kp C_VOLUME_DOWN    &kp C_NEXT        &none   &none   &none  &none  &none
                              &none         &none                       &none   &none
                                                          &none         &none  &none  &none
                                                          &none         &none  &none  &none
    >;
    };
  };
};
